@page "/login"
@inject NavigationManager Navigation
@inject IJSRuntime JS
@inject IUser UserService
@inject IJSRuntime JSRuntime
@using reSep3Client.Models
@using reSep3Client.IServices



<h1 style="color: white">Login Page</h1>

<div style="background-color: transparent;" class="alert alert-secondary mt-4">
    <span style="color: white" class="text-nowrap">Please click here to start.</span>

    <button style="color: white; background-color: lightslategray" class="font-weight-bold link-dark" @onclick="ShowLogin">Sign in</button>
    <button style="color: white; background-color: lightslategray" class="font-weight-bold link-dark" @onclick="ShowRegister">Sign up</button>
</div>

@if (!isVisibleLogin)
{
    <div class="alert alert-secondary mt-4" style="background-color: transparent;">
        <span style="color: white" class="text-nowrap">Username:</span>
        <input @bind="username1" style="background-color:lightslategray" />

        <span style="color: white" class="text-nowrap">Password:</span>
        <input @bind="password1" style="background-color:lightslategray" type="password" />

        <button @onclick="Signin" style="color: white; background-color: lightslategray" class="font-weight-bold link-dark">Sign In</button>
    </div>
}

@if (!isVisibleRegister)
{
    <div class="alert alert-secondary mt-4" style="background-color: transparent;">
        <span style="color: white" class="text-nowrap">Username:</span>
        <input @bind="username" style="background-color:lightslategray" />

        <span style="color: white" class="text-nowrap">Password:</span>
        <input @bind="password" style="background-color:lightslategray" type="password" />

        <span style="color: white" class="text-nowrap">Email:</span>
        <input @bind="email" style="background-color:lightslategray" />

        <button @onclick="Register" style="color: white; background-color: lightslategray" class="font-weight-bold link-dark">Sign Up</button>
    </div>
}

@code {
    private bool isVisibleLogin = true;
    private bool isVisibleRegister = true;
    private string username = "";
    private string password = "";
    private string email = "";
    private string username1 = "";
    private string password1 = "";

    private async Task Signin()
    {
        Console.WriteLine($"Attempting to log in with username: {username1} and password: {password1}"); // Debug log
        var user = new User { Username = username1, Password = password1 };
        var foundUser = await UserService.LoginUser(user);

        if (foundUser != null)
        {
            await JSRuntime.InvokeVoidAsync("eval", $"localStorage.setItem('userId', '{foundUser.Id}')");
            await JSRuntime.InvokeVoidAsync("eval", $"localStorage.setItem('username', '{foundUser.Username}')");
            Console.WriteLine("Login successful"); // Debug log
            Console.WriteLine(foundUser.Id);
            Navigation.NavigateTo("/chat");
        }
        else
        {
            Console.WriteLine("Login failed"); // Debug log
            await JS.InvokeVoidAsync("alert", "Wrong username or password");
        }
    }

    private async Task Register()
    {
        var user = new User
        {
            Username = username,
            Password = password,
            Email = email,
            ChatHistories = new List<ChatMessage>()
        };

        if (!string.IsNullOrEmpty(username) && !string.IsNullOrEmpty(password) && !string.IsNullOrEmpty(email))
        {
            var success = await UserService.RegisterUser(user);
            if (success)
            {
                await JS.InvokeVoidAsync("alert", "Register successful! Now you can login!");
                username = "";
                password = "";
                email = "";
                ShowLogin();
            }
            else
            {
                await JS.InvokeVoidAsync("alert", "Register failed! Please try again.");
            }
        }
        else
        {
            await JS.InvokeVoidAsync("alert", "Please enter valid username, password, and email");
        }
    }

    private void ShowLogin()
    {
        isVisibleLogin = false;
        isVisibleRegister = true;
    }

    private void ShowRegister()
    {
        isVisibleLogin = true;
        isVisibleRegister = false;
    }
}
